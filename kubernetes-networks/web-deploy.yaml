apiVersion: apps/v1
kind: Deployment
metadata:
  name: web # Название нашего объекта Deployment
spec:
  replicas: 3 # Начнем с одного пода
  selector: # Укажем, какие поды относятся к нашему Deployment:
    matchLabels: # - это поды с меткой
      app: web # app и ее значением web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0 
      maxSurge: 100%
  template: # Теперь зададим шаблон конфигурации пода
    metadata:
      labels:
        app: web
      # name: web #Название Pod
      # labels: # Метки в формате key: value
        # key: value
    spec: # Описание Pod
      containers: # Описание контейнеров внутри Pod
      - name: hw2-webserver # Название контейнера
        image: i2rdevops/hw2-webserver:latest # Образ из которого создается контейнер
        readinessProbe:
          httpGet: 
            path: /index.html
            port: 8000
        livenessProbe:
            tcpSocket: { port: 8000 }
        imagePullPolicy: Always
        volumeMounts:
          - name: web
            mountPath: /app  
      initContainers:
      - name: init
        image: busybox:latest
        imagePullPolicy: Always
        command: ['sh', '-c', 'wget -O- https://tinyurl.com/otus-k8s-intro | sh']
        volumeMounts:
          - name: web
            mountPath: /app

      volumes:
        - name: web
          emptyDir: {}
